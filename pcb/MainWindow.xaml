<Controls:MetroWindow x:Class="pcb.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:local="clr-namespace:pcb"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:p="clr-namespace:pcb.Properties"
                      Title="{x:Static p:UIresources.pcbName}"
                      Width="720"
                      Height="450"
                      MinWidth="300"
                      MinHeight="200"
                      Background="#272822"
                      BorderBrush="#007ACC"
                      BorderThickness="1"
                      Closing="MetroWindow_Closing"
                      FontFamily="Microsoft YaHei"
                      FontSize="16"
                      Icon="icon.png"
                      RenderOptions.ClearTypeHint="Enabled"
                      ResizeMode="CanResize"
                      TextOptions.TextFormattingMode="Display"
                      TitleCaps="False"
                      TitlebarHeight="30"
                      mc:Ignorable="d">
    <Grid>
        <Grid Margin="5,30,5,25">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <avalonEdit:TextEditor x:Name="Editor"
                                   Grid.Column="0"
                                   Margin="0,0,0,5"
                                   FontFamily="Microsoft Yahei UI"
                                   FontSize="16"
                                   Foreground="White"
                                   HorizontalScrollBarVisibility="Auto"
                                   LineNumbersForeground="#a6a6a6"
                                   PreviewKeyDown="Editor_PreviewKeyDown"
                                   PreviewMouseWheel="Editor_PreviewMouseWheel"
                                   ScrollViewer.VerticalScrollBarVisibility="Auto"
                                   ShowLineNumbers="True"
                                   TextChanged="Editor_TextChanged"
                                   VerticalScrollBarVisibility="Auto"
                                   WordWrap="True">
                <avalonEdit:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem Click="selectAll"
                                  Header="{x:Static p:UIresources.select_all}"
                                  InputGestureText="Ctrl + A" />
                        <MenuItem Click="copy"
                                  Header="{x:Static p:UIresources.copy}"
                                  InputGestureText="Ctrl + C" />
                        <MenuItem Click="paste"
                                  Header="{x:Static p:UIresources.paste}"
                                  InputGestureText="Ctrl + V" />
                        <Separator />
                        <MenuItem Click="Escape_Click"
                                  Header="{x:Static p:UIresources.escapeSelected}"
                                  InputGestureText="Alt + \" />
                        <MenuItem Click="Deesacpe_Click"
                                  Header="{x:Static p:UIresources.unescapeSelected}"
                                  InputGestureText="Alt + /" />
                        <MenuItem Click="insertUUID_Click"
                                  Header="{x:Static p:UIresources.insertUUID}"
                                  InputGestureText="Alt + R" />
                        <MenuItem Click="inserType_Click"
                                  Header="{x:Static p:UIresources.insertType}"
                                  InputGestureText="Alt + T" />
                        <MenuItem Click="insertFormat_Click"
                                  Header="{x:Static p:UIresources.insertFormatter}"
                                  InputGestureText="Alt + F" />
                        <MenuItem Click="colorBlackTech_Click"
                                  Header="{x:Static p:UIresources.colorJson}"
                                  InputGestureText="Alt + C"
                                  ToolTip="{x:Static p:UIresources.colorJsonUsage}" />
                        <MenuItem Click="packCB_Click"
                                  Header="{x:Static p:UIresources.toCBSetblock}"
                                  InputGestureText="Alt + P" />
                        <Separator />
                        <MenuItem Click="foldAll_Click"
                                  Header="{x:Static p:UIresources.foldAll}"
                                  InputGestureText="Ctrl + K" />
                        <MenuItem Click="FindReplace_Click"
                                  Header="{x:Static p:UIresources.findOrReplace}"
                                  InputGestureText="Ctrl + F" />
                        <MenuItem Click="comment_Click"
                                  Header="{x:Static p:UIresources.comment}"
                                  InputGestureText="Ctrl + /" />
                        <MenuItem Click="uncomment_Click"
                                  Header="{x:Static p:UIresources.uncomment}"
                                  InputGestureText="Ctrl + \" />
                        <Separator />
                        <MenuItem Click="viewNBT_click" Header="{x:Static p:UIresources.view_NBT}" />
                    </ContextMenu>
                </avalonEdit:TextEditor.ContextMenu>
            </avalonEdit:TextEditor>
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="#575757"
                          Focusable="False"
                          ResizeBehavior="PreviousAndNext"
                          ResizeDirection="Columns" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Focusable="False"
                           FontFamily="Arial"
                           FontSize="20"
                           Foreground="White"
                           Padding="5">
                    outline
                </TextBlock>
                <TreeView x:Name="outline_treeview"
                          Grid.Row="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          FontSize="14" />
            </Grid>
        </Grid>
        <Grid x:Name="notifyArea"
              Height="25"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Bottom"
              Background="#575757">
            <Border HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    BorderBrush="#888888"
                    BorderThickness="0,1,0,0">
                <Grid>
                    <TextBlock x:Name="notificationTB"
                               Margin="5,5,5,5"
                               FontFamily="Microsoft Yahei UI"
                               FontSize="11" />
                    <TextBlock x:Name="LastEditTB"
                               Margin="5,5,5,5"
                               FontFamily="Microsoft Yahei UI"
                               FontSize="11"
                               TextAlignment="Right" />
                </Grid>
            </Border>
        </Grid>
        <Menu x:Name="menu"
              Height="30"
              VerticalAlignment="Top"
              BorderBrush="Gray"
              BorderThickness="1"
              IsMainMenu="True">
            <MenuItem Header="{x:Static p:UIresources.file}">
                <MenuItem Click="NewFile_Click" Header="{x:Static p:UIresources.newFile}" />
                <MenuItem Click="OpenFile_Click" Header="{x:Static p:UIresources.loadFile}" />
                <MenuItem Click="SaveNewFile_Click" Header="{x:Static p:UIresources.saveAs}" />
                <MenuItem x:Name="SaveFile"
                          Click="SaveFile_Click"
                          Header="{x:Static p:UIresources.saveFile}"
                          InputGestureText="Ctrl + S"
                          IsEnabled="False" />
            </MenuItem>
            <MenuItem Header="{x:Static p:UIresources.edit}">
                <MenuItem Click="Escape_Click"
                          Header="{x:Static p:UIresources.escapeSelected}"
                          InputGestureText="Alt + \" />
                <MenuItem Click="Deesacpe_Click"
                          Header="{x:Static p:UIresources.unescapeSelected}"
                          InputGestureText="Alt + /" />
                <MenuItem Click="insertUUID_Click"
                          Header="{x:Static p:UIresources.insertUUID}"
                          InputGestureText="Alt + R" />
                <MenuItem Click="inserType_Click"
                          Header="{x:Static p:UIresources.insertType}"
                          InputGestureText="Alt + T" />
                <MenuItem Click="insertFormat_Click"
                          Header="{x:Static p:UIresources.insertFormatter}"
                          InputGestureText="Alt + F" />
                <MenuItem Click="colorBlackTech_Click"
                          Header="{x:Static p:UIresources.colorJson}"
                          InputGestureText="Alt + C"
                          ToolTip="{x:Static p:UIresources.colorJsonUsage}" />
                <MenuItem Click="packCB_Click"
                          Header="{x:Static p:UIresources.toCBSetblock}"
                          InputGestureText="Alt + P" />
                <Separator />
                <MenuItem Click="foldAll_Click"
                          Header="{x:Static p:UIresources.foldAll}"
                          InputGestureText="Ctrl + K" />
                <MenuItem Click="FindReplace_Click"
                          Header="{x:Static p:UIresources.findOrReplace}"
                          InputGestureText="Ctrl + F" />
                <MenuItem Click="comment_Click"
                          Header="{x:Static p:UIresources.comment}"
                          InputGestureText="Ctrl + /" />
                <MenuItem Click="uncomment_Click"
                          Header="{x:Static p:UIresources.uncomment}"
                          InputGestureText="Ctrl + \" />
                <Separator />
                <MenuItem Click="openPyEditor" Header="{x:Static p:UIresources.runPython}" />
                <MenuItem Click="openUuidDialog" Header="UUID" />
                <MenuItem Click="colorClick" Header="{x:Static p:UIresources.colorGen}" />
            </MenuItem>
            <MenuItem x:Name="customs" Header="{x:Static p:UIresources.custom_functions}" />
            <MenuItem Header="{x:Static p:UIresources.setting}">
                <MenuItem Click="showSetting" Header="{x:Static p:UIresources.settingGenerator}" />
                <MenuItem Click="showList"
                          Header="{x:Static p:UIresources.autocompleteSourceSetting}"
                          ToolTip="scb objectives, tags, names, teams" />
            </MenuItem>
            <MenuItem Header="{x:Static p:UIresources.help}">
                <MenuItem x:Name="openWebsite"
                          Click="website_Click"
                          Header="{x:Static p:UIresources.website}" />
                <MenuItem Click="readme_click" Header="{x:Static p:UIresources.doc}" />
                <MenuItem Click="about" Header="{x:Static p:UIresources.about}" />
            </MenuItem>
            <MenuItem Header="OOC">
                <MenuItem Click="generateFromEditor"
                          Header="{x:Static p:UIresources.generate}"
                          InputGestureText="Ctrl + G" />
                <MenuItem Click="stats_click" Header="{x:Static p:UIresources.stats}" />
                <MenuItem Click="replaceCB"
                          Header="{x:Static p:UIresources.updateCommands}"
                          ToolTip="{x:Static p:UIresources.updateCommandsTooltip}" />
                <MenuItem Click="checkCommands" Header="Command check(syntax only, not finished)" />
            </MenuItem>
        </Menu>
    </Grid>
</Controls:MetroWindow>
