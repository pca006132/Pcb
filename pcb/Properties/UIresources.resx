<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="pcbName" xml:space="preserve">
    <value>PCB-Command Editor</value>
  </data>
  <data name="lastSaved" xml:space="preserve">
    <value>last saved:</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="statsDisplaySelect" xml:space="preserve">
    <value>selected {0} characters</value>
  </data>
  <data name="statsDisplay" xml:space="preserve">
    <value>line {0},  column {1}</value>
  </data>
  <data name="openPcbError" xml:space="preserve">
    <value>cannot open pcb</value>
  </data>
  <data name="overwritePrompt" xml:space="preserve">
    <value>load a file will overwrite the current document</value>
  </data>
  <data name="promptSaveNew" xml:space="preserve">
    <value>do you want to save the document before exiting?</value>
  </data>
  <data name="unsaveDetected" xml:space="preserve">
    <value>unsaved changes detected, do you want to save the document before exiting?</value>
  </data>
  <data name="autocompleteSourceSetting" xml:space="preserve">
    <value>autocomplete source setting</value>
  </data>
  <data name="scbObj" xml:space="preserve">
    <value>scb objectives</value>
  </data>
  <data name="scbTag" xml:space="preserve">
    <value>scb tags</value>
  </data>
  <data name="scbTeam" xml:space="preserve">
    <value>Team Names</value>
  </data>
  <data name="entityNames" xml:space="preserve">
    <value>Entity Names</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="findOrReplace" xml:space="preserve">
    <value>Find/Replace</value>
  </data>
  <data name="find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="useRegex" xml:space="preserve">
    <value>Use Regex</value>
  </data>
  <data name="multiLine" xml:space="preserve">
    <value>Multiline Mode</value>
  </data>
  <data name="findNext" xml:space="preserve">
    <value>Find Next</value>
  </data>
  <data name="replaceAll" xml:space="preserve">
    <value>Replace All</value>
  </data>
  <data name="regexNeedEscape" xml:space="preserve">
    <value>if you use Regex mode, you also need to escape the text for replacement_(:3 」∠ )_</value>
  </data>
  <data name="ooc2Long" xml:space="preserve">
    <value>OOC is too long, command:({0}/{1})</value>
  </data>
  <data name="copyAll" xml:space="preserve">
    <value>Copy All</value>
  </data>
  <data name="run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="runPython" xml:space="preserve">
    <value>Run Python</value>
  </data>
  <data name="setting" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="editorFont" xml:space="preserve">
    <value>Editor Font</value>
  </data>
  <data name="useAutocomplete" xml:space="preserve">
    <value>Use Autocomplete</value>
  </data>
  <data name="useAEC" xml:space="preserve">
    <value>Use AEC as Marker</value>
  </data>
  <data name="displaySpace" xml:space="preserve">
    <value>Display Space Characters</value>
  </data>
  <data name="direction" xml:space="preserve">
    <value>CB Direction</value>
  </data>
  <data name="wrapCount" xml:space="preserve">
    <value>CB Count for each line</value>
  </data>
  <data name="blockMode" xml:space="preserve">
    <value>Block Mode</value>
  </data>
  <data name="xlength" xml:space="preserve">
    <value>x-axis length</value>
  </data>
  <data name="zlength" xml:space="preserve">
    <value>z-axis length</value>
  </data>
  <data name="baseID" xml:space="preserve">
    <value>Base(top and bottom) block id</value>
  </data>
  <data name="baseData" xml:space="preserve">
    <value>Base(top and bottom) block data value</value>
  </data>
  <data name="sideID" xml:space="preserve">
    <value>Side block id</value>
  </data>
  <data name="sideData" xml:space="preserve">
    <value>Side block data value</value>
  </data>
  <data name="noMatch" xml:space="preserve">
    <value>match not found</value>
  </data>
  <data name="file" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="newFile" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="loadFile" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="saveAs" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="saveFile" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="escapeSelected" xml:space="preserve">
    <value>Escape Selected Text</value>
  </data>
  <data name="unescapeSelected" xml:space="preserve">
    <value>Unescape Selected Text</value>
  </data>
  <data name="insertUUID" xml:space="preserve">
    <value>Insert Random UUID</value>
  </data>
  <data name="insertType" xml:space="preserve">
    <value>Insert Marker type</value>
  </data>
  <data name="insertFormatter" xml:space="preserve">
    <value>Insert §</value>
  </data>
  <data name="colorJson" xml:space="preserve">
    <value>Command to Setblock Sign</value>
  </data>
  <data name="colorJsonUsage" xml:space="preserve">
    <value>use clickEvent and setblock to insert § char into the game</value>
  </data>
  <data name="foldAll" xml:space="preserve">
    <value>Collapse All</value>
  </data>
  <data name="comment" xml:space="preserve">
    <value>Comment selected lines</value>
  </data>
  <data name="uncomment" xml:space="preserve">
    <value>Uncomment selected lines</value>
  </data>
  <data name="settingGenerator" xml:space="preserve">
    <value>Window/Editor's Settings</value>
  </data>
  <data name="settingAc" xml:space="preserve">
    <value>Autocomplete Setting</value>
  </data>
  <data name="generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="generateToolTip" xml:space="preserve">
    <value>generate ooc from whole document/selected lines</value>
  </data>
  <data name="font" xml:space="preserve">
    <value>Arial</value>
  </data>
  <data name="toCBSetblock" xml:space="preserve">
    <value>Convert to CB Setblock</value>
  </data>
  <data name="updateCommands" xml:space="preserve">
    <value>Update Commands</value>
  </data>
  <data name="updateCommandsTooltip" xml:space="preserve">
    <value>generate ooc that will replace only the selected commands(be careful)</value>
  </data>
  <data name="help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="website" xml:space="preserve">
    <value>Website(update etc)</value>
  </data>
  <data name="doc" xml:space="preserve">
    <value>View Doc</value>
  </data>
  <data name="copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="select_all" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="intro" xml:space="preserve">
    <value>PCB --- a command editor and one command generator by pca006132.&lt;br&gt;version: {0}</value>
  </data>
  <data name="about" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="custom_functions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="view_NBT" xml:space="preserve">
    <value>View NBT</value>
  </data>
  <data name="stats" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="stats_content" xml:space="preserve">
    <value>Total Comment number: {0}\nMultiline comment number: {1}\nSingle line comment number: {2}\nCommand number(init/last/stats): {3}\nEntity number: {4}\nCB Chain number: {5}\nCommand Block number: {6}</value>
  </data>
  <data name="versionText" xml:space="preserve">
    <value>Latest Version: {0}\nYes to open browser to download</value>
  </data>
  <data name="versionDetected" xml:space="preserve">
    <value>Update Detected!</value>
  </data>
  <data name="ooc_limit" xml:space="preserve">
    <value>OOC char Limit</value>
  </data>
  <data name="colorGen" xml:space="preserve">
    <value>color chooser</value>
  </data>
  <data name="red" xml:space="preserve">
    <value>red</value>
  </data>
</root>